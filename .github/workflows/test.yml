name: CI/CD

on:
  schedule:
    - cron: "0 6 * * *"
  pull_request:
  workflow_dispatch:
  workflow_call:
    outputs:
      ckan:
        description: "Change in ckan container"
        value: ${{ jobs.detect-changes.outputs.ckan }}
      nginx:
        description: "Change in nginx container"
        value: ${{ jobs.detect-changes.outputs.nginx }}
      solr:
        description: "Change in solr container"
        value: ${{ jobs.detect-changes.outputs.solr }}
      environment:
        description: "Changes in docker environment"
        value: ${{ jobs.detect-changes.outputs.environment }}

jobs:
  detect-changes:
    uses: ./.github/workflows/changes.yml

  build-containers:
    needs:
      - detect-changes
    name: Build Containers
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./docker/solr/Dockerfile
            context: ./docker/solr
            submodules: ""
            build-frontend: false
            name: solr
            build-container: ${{ needs.detect-changes.outputs.solr == 'true' }}
          - dockerfile: ./docker/nginx/Dockerfile
            context: ./docker/nginx
            submodules: ""
            build-frontend: false
            name: nginx
            build-container: ${{ needs.detect-changes.outputs.nginx == 'true' }}
          - dockerfile: ./ckan/Dockerfile
            context: ./ckan
            submodules: recursive
            build-frontend: true
            name: ckan
            build-container: ${{ needs.detect-changes.outputs.ckan == 'true' }}

    steps:
      - name: checkout
        if: ${{ matrix.build-container == true }}
        uses: actions/checkout@v3
        with:
          submodules: ${{ matrix.submodules }}

      - name: setup docker buildx
        if: ${{ matrix.build-container == true }}
        uses: docker/setup-buildx-action@v2

      - name: build images
        if: ${{ matrix.build-container == true }}
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/${{ matrix.name }}.tar
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ matrix.name }}:latest
        env:
          REGISTRY: ${{ secrets.REGISTRY }}
          REPOSITORY: ${{ vars.REPOSITORY }}

