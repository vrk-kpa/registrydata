name: Build and deploy containers

on:
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
  build-and-test-containers:
    name: Build and test
    uses: ./.github/workflows/test.yml
    secrets: inherit

  build-and-push:
    name: Build and push containers
    runs-on: ubuntu-latest
    environment: qa
    needs:
      - build-and-test-containers
    permissions:
      id-token: write
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./docker/solr/Dockerfile
            context: ./docker/solr
            submodules: ""
            build-frontend: false
            name: solr
            build-container: ${{ needs.build-and-test-containers.outputs.solr == 'true' }}
          - dockerfile: ./docker/nginx/Dockerfile
            context: ./docker/nginx
            submodules: ""
            build-frontend: false
            name: nginx
            build-container: ${{ needs.build-and-test-containers.outputs.nginx == 'true' }}
          - dockerfile: ./ckan/Dockerfile
            context: ./ckan
            submodules: recursive
            build-frontend: true
            name: ckan
            build-container: ${{ needs.build-and-test-containers.outputs.ckan == 'true' }}

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: ${{ matrix.submodules }}

      - name: setup docker buildx
        uses: docker/setup-buildx-action@v2


      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.AWS_BUILD_ROLE }}
          role-session-name: github-actions
          aws-region: eu-west-1

      - name: login to AWS ECR
        id: login
        uses: aws-actions/amazon-ecr-login@v1

      - name: build images
        uses: docker/build-push-action@v4
        if: ${{ matrix.build-container == true }}
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ steps.login.outputs.registry }}/${{ env.REPOSITORY }}/${{ matrix.name }}:${{ github.sha }}
            ${{ steps.login.outputs.registry }}/${{ env.REPOSITORY }}/${{ matrix.name }}:latest
        env:
          REPOSITORY: ${{ vars.REPOSITORY }}
